package net.gta5voice.voice;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;

@Mod(modid = VoiceMod.MOD_ID)
public class VoiceMod {
	public static final String MOD_ID = "voicemod";
	
	@EventHandler
    public void preInit(FMLPreInitializationEvent event){
		
    }
    
    @EventHandler
    public void init(FMLInitializationEvent event){
    	if (FMLCommonHandler.instance().getSide() == Side.SERVER)
    	{
    		INSTANCE.registerMessage(MyMessageHandler.class, MyMessage.class, 0, Side.SERVER);
    		
			TimerTask action = new TimerTask() {
			     public void run() {
			    	JSONArray arr = new JSONArray();
			    	List<EntityPlayerMP> players = FMLCommonHandler.instance().getMinecraftServerInstance().getPlayerList().getPlayers();
			    	for (EntityPlayerMP player : players)
			    	{
			    		JSONObject obj = new JSONObject();
			    		obj.put("name", player.getName());
			    		obj.put("x", Math.round(player.posX * 1000) / 1000.0);
			    		obj.put("y", Math.round(player.posY * 1000) / 1000.0);
			    		obj.put("z", Math.round(player.posZ * 1000) / 1000.0);
			    		obj.put("rotation", Math.round(player.rotationYawHead * 1000) / 1000.0);
			    		obj.put("dimension", player.dimension);
			    		obj.put("isDead", player.isDead);
			    		obj.put("isUnderWater", player.isInWater() && !player.isOverWater());
			    		arr.add(obj);
			    	}
			    	StringWriter out = new StringWriter();
			        try {
						arr.writeJSONString(out);
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
			        
			        String jsonText = out.toString();
			    	INSTANCE.sendToAll(new MyMessage(jsonText));
			     }
			 };
			 
			 Timer caretaker = new Timer();
			 caretaker.schedule(action, 1000, 500); // 500 Milliseconds
			 
    	}
    	else
    	{
    		INSTANCE.registerMessage(MyMessageHandler.class, MyMessage.class, 0, Side.CLIENT);
    	}
    }
    
    @EventHandler
    public void postInit(FMLPostInitializationEvent event){
            
    }
}
